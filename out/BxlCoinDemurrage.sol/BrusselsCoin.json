{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "admins",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceAfterDemurrage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decayPerSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "top",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dur",
          "type": "uint256"
        }
      ],
      "name": "exponentialDecay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getDemurrage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "demurrage",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastActivity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_decayPerSecond",
          "type": "uint256"
        }
      ],
      "name": "setDecayPerSecond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "tax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526305f5e100620000256b033b2e3c9fd0803ce80000006305f5e0fe620002a7565b620000319190620002c1565b6007553480156200004157600080fd5b506040516200190238038062001902833981016040819052620000649162000317565b336040518060400160405280600d81526020016c21393ab9b9b2b6399021b7b4b760991b8152506040518060400160405280600381526020016210961360ea1b8152508160039081620000b8919062000478565b506004620000c7828262000478565b5050506001600160a01b038116620000f957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000104816200018c565b5062000112600033620001de565b5060005b815181101562000184576200016e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68383815181106200015a576200015a62000544565b6020026020010151620001de60201b60201c565b50806200017b816200055a565b91505062000116565b505062000576565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008281526006602090815260408083206001600160a01b038516845290915281205460ff16620002875760008381526006602090815260408083206001600160a01b03861684529091529020805460ff191660011790556200023e3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016200028b565b5060005b92915050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176200028b576200028b62000291565b600082620002df57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200031257600080fd5b919050565b600060208083850312156200032b57600080fd5b82516001600160401b03808211156200034357600080fd5b818501915085601f8301126200035857600080fd5b8151818111156200036d576200036d620002e4565b8060051b604051601f19603f83011681018181108582111715620003955762000395620002e4565b604052918252848201925083810185019188831115620003b457600080fd5b938501935b82851015620003dd57620003cd85620002fa565b84529385019392850192620003b9565b98975050505050505050565b600181811c90821680620003fe57607f821691505b6020821081036200041f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200047357600081815260208120601f850160051c810160208610156200044e5750805b601f850160051c820191505b818110156200046f578281556001016200045a565b5050505b505050565b81516001600160401b03811115620004945762000494620002e4565b620004ac81620004a58454620003e9565b8462000425565b602080601f831160018114620004e45760008415620004cb5750858301515b600019600386901b1c1916600185901b1785556200046f565b600085815260208120601f198616915b828110156200051557888601518255948401946001909101908401620004f4565b5085821015620005345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000600182016200056f576200056f62000291565b5060010190565b61137c80620005866000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806379cc679011610104578063cbcc7612116100a2578063d547741f11610071578063d547741f146103fc578063dd62ed3e1461040f578063f07e96b314610448578063f2fde38b1461046857600080fd5b8063cbcc76121461039c578063cd38de28146103af578063d3fc9864146103c2578063d5391393146103d557600080fd5b806395d89b41116100de57806395d89b4114610370578063a217fddf14610378578063a9059cbb14610380578063ca9985e51461039357600080fd5b806379cc67901461032f5780638da5cb5b1461034257806391d148541461035d57600080fd5b80632f2ff15d1161017c57806370a082311161014b57806370a08231146102d8578063715018a61461030157806375927791146103095780637899d80f1461031c57600080fd5b80632f2ff15d1461028e578063313ce567146102a357806336568abe146102b257806342966c68146102c557600080fd5b8063095ea7b3116101b8578063095ea7b31461023d57806318160ddd1461025057806323b872dd14610258578063248a9ca31461026b57600080fd5b806301ffc9a7146101df578063064e55d01461020757806306fdde0314610228575b600080fd5b6101f26101ed366004610f9d565b61047b565b60405190151581526020015b60405180910390f35b61021a610215366004610fe3565b6104b2565b6040519081526020016101fe565b6102306104eb565b6040516101fe9190611044565b6101f261024b366004611057565b61057d565b60025461021a565b6101f2610266366004611081565b610595565b61021a6102793660046110bd565b60009081526006602052604090206001015490565b6102a161029c3660046110d6565b610645565b005b604051600681526020016101fe565b6102a16102c03660046110d6565b610670565b6102a16102d33660046110bd565b6106a8565b61021a6102e6366004610fe3565b6001600160a01b031660009081526020819052604090205490565b6102a16106b5565b61021a610317366004611102565b6106c9565b6102a161032a366004610fe3565b6106ed565b6102a161033d366004611057565b61071c565b6005546040516001600160a01b0390911681526020016101fe565b6101f261036b3660046110d6565b610731565b61023061075c565b61021a600081565b6101f261038e366004611057565b61076b565b61021a60075481565b61021a6103aa366004610fe3565b6107ff565b6102a16103bd3660046110bd565b61083b565b6102a16103d036600461113a565b610848565b61021a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102a161040a3660046110d6565b61092b565b61021a61041d366004611205565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61021a610456366004610fe3565b60086020526000908152604090205481565b6102a1610476366004610fe3565b610950565b60006001600160e01b03198216637965db0b60e01b14806104ac57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6001600160a01b0381166000908152602081815260408083205460089092528220546104e49082906103179042611245565b9392505050565b6060600380546104fa90611258565b80601f016020809104026020016040519081016040528092919081815260200182805461052690611258565b80156105735780601f1061054857610100808354040283529160200191610573565b820191906000526020600020905b81548152906001019060200180831161055657829003601f168201915b5050505050905090565b60003361058b81858561098b565b5060019392505050565b6000336105a3858285610998565b60006105ae866107ff565b6001600160a01b038716600090815260086020526040902042905590506105e7866105e16005546001600160a01b031690565b83610a10565b83610607836001600160a01b031660009081526020819052604090205490565b101561062e5760405162461bcd60e51b815260040161062590611292565b60405180910390fd5b610639868686610a10565b50600195945050505050565b60008281526006602052604090206001015461066081610a6f565b61066a8383610a79565b50505050565b6001600160a01b03811633146106995760405163334bd91960e11b815260040160405180910390fd5b6106a38282610b0d565b505050565b6106b23382610b7a565b50565b6106bd610bb0565b6106c76000610bdd565b565b60006104e4836106e8600754856b033b2e3c9fd0803ce8000000610c2f565b610ced565b6106f5610bb0565b6000610700826107ff565b9050610718826105e16005546001600160a01b031690565b5050565b610727823383610998565b6107188282610b7a565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546104fa90611258565b60003381610778826107ff565b6001600160a01b038316600090815260086020526040902042905590506107ab826105e16005546001600160a01b031690565b836107cb836001600160a01b031660009081526020819052604090205490565b10156107e95760405162461bcd60e51b815260040161062590611292565b6107f4828686610a10565b506001949350505050565b6001600160a01b0381166000908152602081815260408083205460089092528220546108319082906103179042611245565b6104e49082611245565b610843610bb0565b600755565b6108727f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610731565b6108be5760405162461bcd60e51b815260206004820152601d60248201527f4d7573742068617665206d696e74657220726f6c6520746f206d696e740000006044820152606401610625565b6001600160a01b03831660009081526008602052604090204290556108e38383610d2f565b826001600160a01b03167fe7cd4ce7f2a465edc730269a1305e8a48bad821e8fb7e152ec413829c01a53c4838360405161091e9291906112d9565b60405180910390a2505050565b60008281526006602052604090206001015461094681610a6f565b61066a8383610b0d565b610958610bb0565b6001600160a01b03811661098257604051631e4fbdf760e01b815260006004820152602401610625565b6106b281610bdd565b6106a38383836001610d65565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461066a5781811015610a0157604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610625565b61066a84848484036000610d65565b6001600160a01b038316610a3a57604051634b637e8f60e11b815260006004820152602401610625565b6001600160a01b038216610a645760405163ec442f0560e01b815260006004820152602401610625565b6106a3838383610e3a565b6106b28133610f64565b6000610a858383610731565b610b055760008381526006602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610abd3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104ac565b5060006104ac565b6000610b198383610731565b15610b055760008381526006602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104ac565b6001600160a01b038216610ba457604051634b637e8f60e11b815260006004820152602401610625565b61071882600083610e3a565b6005546001600160a01b031633146106c75760405163118cdaa760e01b8152336004820152602401610625565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000828015610ce157848015610cd657600185168015610c5157869350610c55565b8493505b50600284046002860495505b8515610cd0578687028760801c15610c7857600080fd5b81810181811015610c8857600080fd5b8690049750506001861615610cc5578684028488820414158815151615610cae57600080fd5b81810181811015610cbe57600080fd5b8690049450505b600286049550610c61565b50610cdb565b600092505b50610ce5565b8291505b509392505050565b6000610cf982846112fa565b9050811580610d10575082610d0e8383611311565b145b610d1957600080fd5b6104e46b033b2e3c9fd0803ce800000082611311565b6001600160a01b038216610d595760405163ec442f0560e01b815260006004820152602401610625565b61071860008383610e3a565b6001600160a01b038416610d8f5760405163e602df0560e01b815260006004820152602401610625565b6001600160a01b038316610db957604051634a1406b160e11b815260006004820152602401610625565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561066a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e2c91815260200190565b60405180910390a350505050565b6001600160a01b038316610e65578060026000828254610e5a9190611333565b90915550610ed79050565b6001600160a01b03831660009081526020819052604090205481811015610eb85760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610625565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610ef357600280548290039055610f12565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f5791815260200190565b60405180910390a3505050565b610f6e8282610731565b6107185760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610625565b600060208284031215610faf57600080fd5b81356001600160e01b0319811681146104e457600080fd5b80356001600160a01b0381168114610fde57600080fd5b919050565b600060208284031215610ff557600080fd5b6104e482610fc7565b6000815180845260005b8181101561102457602081850181015186830182015201611008565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104e46020830184610ffe565b6000806040838503121561106a57600080fd5b61107383610fc7565b946020939093013593505050565b60008060006060848603121561109657600080fd5b61109f84610fc7565b92506110ad60208501610fc7565b9150604084013590509250925092565b6000602082840312156110cf57600080fd5b5035919050565b600080604083850312156110e957600080fd5b823591506110f960208401610fc7565b90509250929050565b6000806040838503121561111557600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561114f57600080fd5b61115884610fc7565b925060208401359150604084013567ffffffffffffffff8082111561117c57600080fd5b818601915086601f83011261119057600080fd5b8135818111156111a2576111a2611124565b604051601f8201601f19908116603f011681019083821181831017156111ca576111ca611124565b816040528281528960208487010111156111e357600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000806040838503121561121857600080fd5b61122183610fc7565b91506110f960208401610fc7565b634e487b7160e01b600052601160045260246000fd5b818103818111156104ac576104ac61122f565b600181811c9082168061126c57607f821691505b60208210810361128c57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526027908201527f4e6f7420656e6f7567682062616c616e63652c20636865636b20666f722064656040820152666d75727261676560c81b606082015260800190565b8281526040602082015260006112f26040830184610ffe565b949350505050565b80820281158282048414176104ac576104ac61122f565b60008261132e57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156104ac576104ac61122f56fea26469706673582212203c4267c7c1d7573b1c862c9973dc069f522c33a062a45f0f26e349bad11990dc64736f6c63430008140033",
    "sourceMap": "302:4515:0:-:0;;;533:9;516:14;470:8;522;516:14;:::i;:::-;:26;;;;:::i;:::-;484:58;;678:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;723:10;1896:113:11;;;;;;;;;;;;;-1:-1:-1;;;1896:113:11;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:11;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:11;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:9;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:9;;1350:1;1322:31;;;4724:51:20;4697:18;;1322:31:9;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;775:42:0::2;2232:4:7;806:10:0;775;:42::i;:::-;;832:9;827:103;851:6;:13;847:1;:17;827:103;;;885:34;416:24;909:6;916:1;909:9;;;;;;;;:::i;:::-;;;;;;;885:10;;;:34;;:::i;:::-;-1:-1:-1::0;866:3:0;::::2;::::0;::::2;:::i;:::-;;;;827:103;;;;678:258:::0;302:4515;;2912:187:9;3004:6;;;-1:-1:-1;;;;;3020:17:9;;;-1:-1:-1;;;;;;3020:17:9;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;6179:316:7:-;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:7;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:7;;;;;;;;;:36;;-1:-1:-1;;6315:36:7;6347:4;6315:36;;;6397:12;735:10:15;;656:96;6397:12:7;-1:-1:-1;;;;;6370:40:7;6388:7;-1:-1:-1;;;;;6370:40:7;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:7;6424:11;;6272:217;-1:-1:-1;6473:5:7;6272:217;6179:316;;;;:::o;14:127:20:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:168;219:9;;;250;;267:15;;;261:22;;247:37;237:71;;288:18;;:::i;319:217::-;359:1;385;375:132;;429:10;424:3;420:20;417:1;410:31;464:4;461:1;454:15;492:4;489:1;482:15;375:132;-1:-1:-1;521:9:20;;319:217::o;541:127::-;602:10;597:3;593:20;590:1;583:31;633:4;630:1;623:15;657:4;654:1;647:15;673:177;752:13;;-1:-1:-1;;;;;794:31:20;;784:42;;774:70;;840:1;837;830:12;774:70;673:177;;;:::o;855:1129::-;950:6;981:2;1024;1012:9;1003:7;999:23;995:32;992:52;;;1040:1;1037;1030:12;992:52;1067:16;;-1:-1:-1;;;;;1132:14:20;;;1129:34;;;1159:1;1156;1149:12;1129:34;1197:6;1186:9;1182:22;1172:32;;1242:7;1235:4;1231:2;1227:13;1223:27;1213:55;;1264:1;1261;1254:12;1213:55;1293:2;1287:9;1315:2;1311;1308:10;1305:36;;;1321:18;;:::i;:::-;1367:2;1364:1;1360:10;1399:2;1393:9;1462:2;1458:7;1453:2;1449;1445:11;1441:25;1433:6;1429:38;1517:6;1505:10;1502:22;1497:2;1485:10;1482:18;1479:46;1476:72;;;1528:18;;:::i;:::-;1564:2;1557:22;1614:18;;;1648:15;;;;-1:-1:-1;1690:11:20;;;1686:20;;;1718:19;;;1715:39;;;1750:1;1747;1740:12;1715:39;1774:11;;;;1794:159;1810:6;1805:3;1802:15;1794:159;;;1876:34;1906:3;1876:34;:::i;:::-;1864:47;;1827:12;;;;1931;;;;1794:159;;;1972:6;855:1129;-1:-1:-1;;;;;;;;855:1129:20:o;1989:380::-;2068:1;2064:12;;;;2111;;;2132:61;;2186:4;2178:6;2174:17;2164:27;;2132:61;2239:2;2231:6;2228:14;2208:18;2205:38;2202:161;;2285:10;2280:3;2276:20;2273:1;2266:31;2320:4;2317:1;2310:15;2348:4;2345:1;2338:15;2202:161;;1989:380;;;:::o;2500:545::-;2602:2;2597:3;2594:11;2591:448;;;2638:1;2663:5;2659:2;2652:17;2708:4;2704:2;2694:19;2778:2;2766:10;2762:19;2759:1;2755:27;2749:4;2745:38;2814:4;2802:10;2799:20;2796:47;;;-1:-1:-1;2837:4:20;2796:47;2892:2;2887:3;2883:12;2880:1;2876:20;2870:4;2866:31;2856:41;;2947:82;2965:2;2958:5;2955:13;2947:82;;;3010:17;;;2991:1;2980:13;2947:82;;;2951:3;;;2591:448;2500:545;;;:::o;3221:1352::-;3341:10;;-1:-1:-1;;;;;3363:30:20;;3360:56;;;3396:18;;:::i;:::-;3425:97;3515:6;3475:38;3507:4;3501:11;3475:38;:::i;:::-;3469:4;3425:97;:::i;:::-;3577:4;;3641:2;3630:14;;3658:1;3653:663;;;;4360:1;4377:6;4374:89;;;-1:-1:-1;4429:19:20;;;4423:26;4374:89;-1:-1:-1;;3178:1:20;3174:11;;;3170:24;3166:29;3156:40;3202:1;3198:11;;;3153:57;4476:81;;3623:944;;3653:663;2447:1;2440:14;;;2484:4;2471:18;;-1:-1:-1;;3689:20:20;;;3807:236;3821:7;3818:1;3815:14;3807:236;;;3910:19;;;3904:26;3889:42;;4002:27;;;;3970:1;3958:14;;;;3837:19;;3807:236;;;3811:3;4071:6;4062:7;4059:19;4056:201;;;4132:19;;;4126:26;-1:-1:-1;;4215:1:20;4211:14;;;4227:3;4207:24;4203:37;4199:42;4184:58;4169:74;;4056:201;-1:-1:-1;;;;;4303:1:20;4287:14;;;4283:22;4270:36;;-1:-1:-1;3221:1352:20:o;4786:127::-;4847:10;4842:3;4838:20;4835:1;4828:31;4878:4;4875:1;4868:15;4902:4;4899:1;4892:15;4918:135;4957:3;4978:17;;;4975:43;;4998:18;;:::i;:::-;-1:-1:-1;5045:1:20;5034:13;;4918:135::o;:::-;302:4515:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806379cc679011610104578063cbcc7612116100a2578063d547741f11610071578063d547741f146103fc578063dd62ed3e1461040f578063f07e96b314610448578063f2fde38b1461046857600080fd5b8063cbcc76121461039c578063cd38de28146103af578063d3fc9864146103c2578063d5391393146103d557600080fd5b806395d89b41116100de57806395d89b4114610370578063a217fddf14610378578063a9059cbb14610380578063ca9985e51461039357600080fd5b806379cc67901461032f5780638da5cb5b1461034257806391d148541461035d57600080fd5b80632f2ff15d1161017c57806370a082311161014b57806370a08231146102d8578063715018a61461030157806375927791146103095780637899d80f1461031c57600080fd5b80632f2ff15d1461028e578063313ce567146102a357806336568abe146102b257806342966c68146102c557600080fd5b8063095ea7b3116101b8578063095ea7b31461023d57806318160ddd1461025057806323b872dd14610258578063248a9ca31461026b57600080fd5b806301ffc9a7146101df578063064e55d01461020757806306fdde0314610228575b600080fd5b6101f26101ed366004610f9d565b61047b565b60405190151581526020015b60405180910390f35b61021a610215366004610fe3565b6104b2565b6040519081526020016101fe565b6102306104eb565b6040516101fe9190611044565b6101f261024b366004611057565b61057d565b60025461021a565b6101f2610266366004611081565b610595565b61021a6102793660046110bd565b60009081526006602052604090206001015490565b6102a161029c3660046110d6565b610645565b005b604051600681526020016101fe565b6102a16102c03660046110d6565b610670565b6102a16102d33660046110bd565b6106a8565b61021a6102e6366004610fe3565b6001600160a01b031660009081526020819052604090205490565b6102a16106b5565b61021a610317366004611102565b6106c9565b6102a161032a366004610fe3565b6106ed565b6102a161033d366004611057565b61071c565b6005546040516001600160a01b0390911681526020016101fe565b6101f261036b3660046110d6565b610731565b61023061075c565b61021a600081565b6101f261038e366004611057565b61076b565b61021a60075481565b61021a6103aa366004610fe3565b6107ff565b6102a16103bd3660046110bd565b61083b565b6102a16103d036600461113a565b610848565b61021a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102a161040a3660046110d6565b61092b565b61021a61041d366004611205565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61021a610456366004610fe3565b60086020526000908152604090205481565b6102a1610476366004610fe3565b610950565b60006001600160e01b03198216637965db0b60e01b14806104ac57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6001600160a01b0381166000908152602081815260408083205460089092528220546104e49082906103179042611245565b9392505050565b6060600380546104fa90611258565b80601f016020809104026020016040519081016040528092919081815260200182805461052690611258565b80156105735780601f1061054857610100808354040283529160200191610573565b820191906000526020600020905b81548152906001019060200180831161055657829003601f168201915b5050505050905090565b60003361058b81858561098b565b5060019392505050565b6000336105a3858285610998565b60006105ae866107ff565b6001600160a01b038716600090815260086020526040902042905590506105e7866105e16005546001600160a01b031690565b83610a10565b83610607836001600160a01b031660009081526020819052604090205490565b101561062e5760405162461bcd60e51b815260040161062590611292565b60405180910390fd5b610639868686610a10565b50600195945050505050565b60008281526006602052604090206001015461066081610a6f565b61066a8383610a79565b50505050565b6001600160a01b03811633146106995760405163334bd91960e11b815260040160405180910390fd5b6106a38282610b0d565b505050565b6106b23382610b7a565b50565b6106bd610bb0565b6106c76000610bdd565b565b60006104e4836106e8600754856b033b2e3c9fd0803ce8000000610c2f565b610ced565b6106f5610bb0565b6000610700826107ff565b9050610718826105e16005546001600160a01b031690565b5050565b610727823383610998565b6107188282610b7a565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546104fa90611258565b60003381610778826107ff565b6001600160a01b038316600090815260086020526040902042905590506107ab826105e16005546001600160a01b031690565b836107cb836001600160a01b031660009081526020819052604090205490565b10156107e95760405162461bcd60e51b815260040161062590611292565b6107f4828686610a10565b506001949350505050565b6001600160a01b0381166000908152602081815260408083205460089092528220546108319082906103179042611245565b6104e49082611245565b610843610bb0565b600755565b6108727f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610731565b6108be5760405162461bcd60e51b815260206004820152601d60248201527f4d7573742068617665206d696e74657220726f6c6520746f206d696e740000006044820152606401610625565b6001600160a01b03831660009081526008602052604090204290556108e38383610d2f565b826001600160a01b03167fe7cd4ce7f2a465edc730269a1305e8a48bad821e8fb7e152ec413829c01a53c4838360405161091e9291906112d9565b60405180910390a2505050565b60008281526006602052604090206001015461094681610a6f565b61066a8383610b0d565b610958610bb0565b6001600160a01b03811661098257604051631e4fbdf760e01b815260006004820152602401610625565b6106b281610bdd565b6106a38383836001610d65565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461066a5781811015610a0157604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610625565b61066a84848484036000610d65565b6001600160a01b038316610a3a57604051634b637e8f60e11b815260006004820152602401610625565b6001600160a01b038216610a645760405163ec442f0560e01b815260006004820152602401610625565b6106a3838383610e3a565b6106b28133610f64565b6000610a858383610731565b610b055760008381526006602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610abd3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104ac565b5060006104ac565b6000610b198383610731565b15610b055760008381526006602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104ac565b6001600160a01b038216610ba457604051634b637e8f60e11b815260006004820152602401610625565b61071882600083610e3a565b6005546001600160a01b031633146106c75760405163118cdaa760e01b8152336004820152602401610625565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000828015610ce157848015610cd657600185168015610c5157869350610c55565b8493505b50600284046002860495505b8515610cd0578687028760801c15610c7857600080fd5b81810181811015610c8857600080fd5b8690049750506001861615610cc5578684028488820414158815151615610cae57600080fd5b81810181811015610cbe57600080fd5b8690049450505b600286049550610c61565b50610cdb565b600092505b50610ce5565b8291505b509392505050565b6000610cf982846112fa565b9050811580610d10575082610d0e8383611311565b145b610d1957600080fd5b6104e46b033b2e3c9fd0803ce800000082611311565b6001600160a01b038216610d595760405163ec442f0560e01b815260006004820152602401610625565b61071860008383610e3a565b6001600160a01b038416610d8f5760405163e602df0560e01b815260006004820152602401610625565b6001600160a01b038316610db957604051634a1406b160e11b815260006004820152602401610625565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561066a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e2c91815260200190565b60405180910390a350505050565b6001600160a01b038316610e65578060026000828254610e5a9190611333565b90915550610ed79050565b6001600160a01b03831660009081526020819052604090205481811015610eb85760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610625565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610ef357600280548290039055610f12565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f5791815260200190565b60405180910390a3505050565b610f6e8282610731565b6107185760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610625565b600060208284031215610faf57600080fd5b81356001600160e01b0319811681146104e457600080fd5b80356001600160a01b0381168114610fde57600080fd5b919050565b600060208284031215610ff557600080fd5b6104e482610fc7565b6000815180845260005b8181101561102457602081850181015186830182015201611008565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104e46020830184610ffe565b6000806040838503121561106a57600080fd5b61107383610fc7565b946020939093013593505050565b60008060006060848603121561109657600080fd5b61109f84610fc7565b92506110ad60208501610fc7565b9150604084013590509250925092565b6000602082840312156110cf57600080fd5b5035919050565b600080604083850312156110e957600080fd5b823591506110f960208401610fc7565b90509250929050565b6000806040838503121561111557600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561114f57600080fd5b61115884610fc7565b925060208401359150604084013567ffffffffffffffff8082111561117c57600080fd5b818601915086601f83011261119057600080fd5b8135818111156111a2576111a2611124565b604051601f8201601f19908116603f011681019083821181831017156111ca576111ca611124565b816040528281528960208487010111156111e357600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000806040838503121561121857600080fd5b61122183610fc7565b91506110f960208401610fc7565b634e487b7160e01b600052601160045260246000fd5b818103818111156104ac576104ac61122f565b600181811c9082168061126c57607f821691505b60208210810361128c57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526027908201527f4e6f7420656e6f7567682062616c616e63652c20636865636b20666f722064656040820152666d75727261676560c81b606082015260800190565b8281526040602082015260006112f26040830184610ffe565b949350505050565b80820281158282048414176104ac576104ac61122f565b60008261132e57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156104ac576104ac61122f56fea26469706673582212203c4267c7c1d7573b1c862c9973dc069f522c33a062a45f0f26e349bad11990dc64736f6c63430008140033",
    "sourceMap": "302:4515:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:7;;;;;;:::i;:::-;;:::i;:::-;;;470:14:20;;463:22;445:41;;433:2;418:18;2565:202:7;;;;;;;;1810:240:0;;;;;;:::i;:::-;;:::i;:::-;;;1012:25:20;;;1000:2;985:18;1810:240:0;866:177:20;2074:89:11;;;:::i;:::-;;;;;;;:::i;4293:186::-;;;;;;:::i;:::-;;:::i;3144:97::-;3222:12;;3144:97;;2464:473:0;;;;;;:::i;:::-;;:::i;3810:120:7:-;;;;;;:::i;:::-;3875:7;3901:12;;;:6;:12;;;;;:22;;;;3810:120;4226:136;;;;;;:::i;:::-;;:::i;:::-;;942:90:0;;;1024:1;3061:36:20;;3049:2;3034:18;942:90:0;2919:184:20;5328:245:7;;;;;;:::i;:::-;;:::i;618:87:13:-;;;;;;:::i;:::-;;:::i;3299:116:11:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:11;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:9;;;:::i;3361:147:0:-;;;;;;:::i;:::-;;:::i;1649:155::-;;;;;;:::i;:::-;;:::i;1021:158:13:-;;;;;;:::i;:::-;;:::i;1638:85:9:-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:9;;;3692:51:20;;3680:2;3665:18;1638:85:9;3546:203:20;2854:136:7;;;;;;:::i;:::-;;:::i;2276:93:11:-;;;:::i;2187:49:7:-;;2232:4;2187:49;;2056:402:0;;;;;;:::i;:::-;;:::i;484:58::-;;;;;;1392:251;;;;;;:::i;:::-;;:::i;2943:121::-;;;;;;:::i;:::-;;:::i;1038:348::-;;;;;;:::i;:::-;;:::i;378:62::-;;416:24;378:62;;4642:138:7;;;;;;:::i;:::-;;:::i;3846:140:11:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:11;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;549:47:0;;;;;;:::i;:::-;;;;;;;;;;;;;;2543:215:9;;;;;;:::i;:::-;;:::i;2565:202:7:-;2650:4;-1:-1:-1;;;;;;2673:47:7;;-1:-1:-1;;;2673:47:7;;:87;;-1:-1:-1;;;;;;;;;;861:40:16;;;2724:36:7;2666:94;2565:202;-1:-1:-1;;2565:202:7:o;1810:240:0:-;-1:-1:-1;;;;;3390:18:11;;1879:15:0;3390:18:11;;;;;;;;;;;;2020:12:0;:21;;;;;;1969:73;;3390:18:11;;2002:39:0;;:15;:39;:::i;1969:73::-;1959:83;1810:240;-1:-1:-1;;;1810:240:0:o;2074:89:11:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:15;4420:31:11;735:10:15;4436:7:11;4445:5;4420:8;:31::i;:::-;-1:-1:-1;4468:4:11;;4293:186;-1:-1:-1;;;4293:186:11:o;2464:473:0:-;2552:4;735:10:15;2608:37:0;2624:4;735:10:15;2639:5:0;2608:15;:37::i;:::-;2655:17;2675:18;2688:4;2675:12;:18::i;:::-;-1:-1:-1;;;;;2703:18:0;;;;;;:12;:18;;;;;2724:15;2703:36;;2655:38;-1:-1:-1;2749:35:0;2716:4;2765:7;1710:6:9;;-1:-1:-1;;;;;1710:6:9;;1638:85;2765:7:0;2774:9;2749;:35::i;:::-;2824:5;2802:18;2812:7;-1:-1:-1;;;;;3390:18:11;3364:7;3390:18;;;;;;;;;;;;3299:116;2802:18:0;:27;;2794:79;;;;-1:-1:-1;;;2794:79:0;;;;;;;:::i;:::-;;;;;;;;;2883:26;2893:4;2899:2;2903:5;2883:9;:26::i;:::-;-1:-1:-1;2926:4:0;;2464:473;-1:-1:-1;;;;;2464:473:0:o;4226:136:7:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:7;;735:10:15;5421:34:7;5417:102;;5478:30;;-1:-1:-1;;;5478:30:7;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;618:87:13:-;672:26;735:10:15;692:5:13;672;:26::i;:::-;618:87;:::o;2293:101:9:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3361:147:0:-;3434:7;3460:41;3465:3;3470:30;3475:14;;3491:3;470:8;3470:4;:30::i;:::-;3460:4;:41::i;1649:155::-;1531:13:9;:11;:13::i;:::-;1708:17:0::1;1728:21;1741:7;1728:12;:21::i;:::-;1708:41;;1759:38;1769:7;1778;1710:6:9::0;;-1:-1:-1;;;;;1710:6:9;;1638:85;1759:38:0::1;1698:106;1649:155:::0;:::o;1021:158:13:-;1096:45;1112:7;735:10:15;1135:5:13;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;2854:136:7:-;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:7;;;;;;;;;;;;;;;2854:136::o;2276:93:11:-;2323:13;2355:7;2348:14;;;;;:::i;2056:402:0:-;2126:4;735:10:15;2126:4:0;2199:18;735:10:15;2199:12:0;:18::i;:::-;-1:-1:-1;;;;;2227:18:0;;;;;;:12;:18;;;;;2248:15;2227:36;;2179:38;-1:-1:-1;2273:35:0;2240:4;2289:7;1710:6:9;;-1:-1:-1;;;;;1710:6:9;;1638:85;2273:35:0;2345:5;2326:15;2336:4;-1:-1:-1;;;;;3390:18:11;3364:7;3390:18;;;;;;;;;;;;3299:116;2326:15:0;:24;;2318:76;;;;-1:-1:-1;;;2318:76:0;;;;;;;:::i;:::-;2404:26;2414:4;2420:2;2424:5;2404:9;:26::i;:::-;-1:-1:-1;2447:4:0;;2056:402;-1:-1:-1;;;;2056:402:0:o;1392:251::-;-1:-1:-1;;;;;3390:18:11;;1452:17:0;3390:18:11;;;;;;;;;;;;1614:12:0;:21;;;;;;1563:73;;3390:18:11;;1596:39:0;;:15;:39;:::i;1563:73::-;1546:90;;:14;:90;:::i;2943:121::-;1531:13:9;:11;:13::i;:::-;3024:14:0::1;:32:::0;2943:121::o;1038:348::-;1175:32;416:24;1196:10;1175:7;:32::i;:::-;1154:108;;;;-1:-1:-1;;;1154:108:0;;6480:2:20;1154:108:0;;;6462:21:20;6519:2;6499:18;;;6492:30;6558:31;6538:18;;;6531:59;6607:18;;1154:108:0;6278:353:20;1154:108:0;-1:-1:-1;;;;;1272:16:0;;;;;;:12;:16;;;;;1291:15;1272:34;;1316:17;1285:2;1326:6;1316:5;:17::i;:::-;1355:2;-1:-1:-1;;;;;1348:31:0;;1359:6;1367:11;1348:31;;;;;;;:::i;:::-;;;;;;;;1038:348;;;:::o;4642:138:7:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;2543:215:9:-:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:9;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:9;;2700:1:::1;2672:31;::::0;::::1;3692:51:20::0;3665:18;;2672:31:9::1;3546:203:20::0;2623:91:9::1;2723:28;2742:8;2723:18;:28::i;8989:128:11:-:0;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;10663:477::-;-1:-1:-1;;;;;3952:18:11;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:11;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:11;;-1:-1:-1;;;;;7152:32:20;;10936:60:11;;;7134:51:20;7201:18;;;7194:34;;;7244:18;;;7237:34;;;7107:18;;10936:60:11;6932:345:20;10881:130:11;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;-1:-1:-1;;;;;5739:18:11;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:11;;5807:1;5780:30;;;3692:51:20;3665:18;;5780:30:11;3546:203:20;5735:86:11;-1:-1:-1;;;;;5834:16:11;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:11;;5902:1;5873:32;;;3692:51:20;3665:18;;5873:32:11;3546:203:20;5830:86:11;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;3199:103:7:-;3265:30;3276:4;735:10:15;3265::7;:30::i;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:7;;;;;;;;;:36;;-1:-1:-1;;6315:36:7;6347:4;6315:36;;;6397:12;735:10:15;;656:96;6397:12:7;-1:-1:-1;;;;;6370:40:7;6388:7;-1:-1:-1;;;;;6370:40:7;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:7;6424:11;;6272:217;-1:-1:-1;6473:5:7;6466:12;;6730:317;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6866:29:7;;;;;;;;;;:37;;-1:-1:-1;;6866:37:7;;;6922:40;735:10:15;;6866:12:7;;6922:40;;6898:5;6922:40;-1:-1:-1;6983:4:7;6976:11;;8247:206:11;-1:-1:-1;;;;;8317:21:11;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:11;;8388:1;8361:30;;;3692:51:20;3665:18;;8361:30:11;3546:203:20;8313:89:11;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;1796:162:9:-;1710:6;;-1:-1:-1;;;;;1710:6:9;735:10:15;1855:23:9;1851:101;;1901:40;;-1:-1:-1;;;1901:40:9;;735:10:15;1901:40:9;;;3692:51:20;3665:18;;1901:40:9;3546:203:20;2912:187:9;3004:6;;;-1:-1:-1;;;;;3020:17:9;;;-1:-1:-1;;;;;;3020:17:9;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;3681:1134:0:-;3751:9;3802:1;3804:17;;;;3867:1;3869:17;;;;3940:9;;;3950:17;;;;3983:1;3978:6;;3933:53;;3950:17;3964:1;3959:6;;3933:53;;4026:1;4023;4019:9;4085:1;4082;4078:9;4073:14;;4067:700;4090:1;4067:700;;;4153:1;4150;4146:9;4192:1;4187:3;4183:11;4180:30;;;4206:1;4204;4197:11;4180:30;4258:4;4254:2;4250:13;4303:2;4294:7;4291:15;4288:34;;;4318:1;4316;4309:11;4288:34;4352:15;;;;-1:-1:-1;;4395:8:0;;;4392:353;;;4451:1;4448;4444:9;4530:1;4526;4522:2;4518:10;4515:17;4508:25;4503:1;4496:9;4489:17;4485:49;4482:68;;;4546:1;4544;4537:11;4482:68;4602:4;4598:2;4594:13;4651:2;4642:7;4639:15;4636:34;;;4666:1;4664;4657:11;4636:34;4704:15;;;;-1:-1:-1;;4392:353:0;4105:1;4103;4099:8;4094:13;;4067:700;;;4071:18;3860:925;;3869:17;3883:1;3878:6;;3860:925;;3795:1004;;3804:17;3818:1;3813:6;;3795:1004;;3681:1134;;;;;:::o;3515:156::-;3574:9;3599:5;3603:1;3599;:5;:::i;:::-;3595:9;-1:-1:-1;3622:6:0;;;:20;;-1:-1:-1;3641:1:0;3632:5;3636:1;3632;:5;:::i;:::-;:10;3622:20;3614:29;;;;;;3657:7;470:8;3657:1;:7;:::i;7721:208:11:-;-1:-1:-1;;;;;7791:21:11;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:11;;7864:1;7835:32;;;3692:51:20;3665:18;;7835:32:11;3546:203:20;7787:91:11;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:11;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:11;;10132:1;10103:32;;;3692:51:20;3665:18;;10103:32:11;3546:203:20;10057:89:11;-1:-1:-1;;;;;10159:21:11;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:11;;10231:1;10203:31;;;3692:51:20;3665:18;;10203:31:11;3546:203:20;10155:90:11;-1:-1:-1;;;;;10254:18:11;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:11;10342:5;-1:-1:-1;;;;;10333:31:11;;10358:5;10333:31;;;;1012:25:20;;1000:2;985:18;;866:177;10333:31:11;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:11;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:11;;-1:-1:-1;6356:540:11;;-1:-1:-1;;;;;6570:15:11;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:11;;-1:-1:-1;;;;;7152:32:20;;6649:50:11;;;7134:51:20;7201:18;;;7194:34;;;7244:18;;;7237:34;;;7107:18;;6649:50:11;6932:345:20;6599:115:11;-1:-1:-1;;;;;6834:15:11;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:11;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:11;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:11;7355:4;-1:-1:-1;;;;;7346:25:11;;7365:5;7346:25;;;;1012::20;;1000:2;985:18;;866:177;7346:25:11;;;;;;;;6271:1107;;;:::o;3432:197:7:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:7;;-1:-1:-1;;;;;7999:32:20;;3565:47:7;;;7981:51:20;8048:18;;;8041:34;;;7954:18;;3565:47:7;7807:274:20;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:20;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:20;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:186::-;734:6;787:2;775:9;766:7;762:23;758:32;755:52;;;803:1;800;793:12;755:52;826:29;845:9;826:29;:::i;1048:423::-;1090:3;1128:5;1122:12;1155:6;1150:3;1143:19;1180:1;1190:162;1204:6;1201:1;1198:13;1190:162;;;1266:4;1322:13;;;1318:22;;1312:29;1294:11;;;1290:20;;1283:59;1219:12;1190:162;;;1194:3;1397:1;1390:4;1381:6;1376:3;1372:16;1368:27;1361:38;1460:4;1453:2;1449:7;1444:2;1436:6;1432:15;1428:29;1423:3;1419:39;1415:50;1408:57;;;1048:423;;;;:::o;1476:220::-;1625:2;1614:9;1607:21;1588:4;1645:45;1686:2;1675:9;1671:18;1663:6;1645:45;:::i;1701:254::-;1769:6;1777;1830:2;1818:9;1809:7;1805:23;1801:32;1798:52;;;1846:1;1843;1836:12;1798:52;1869:29;1888:9;1869:29;:::i;:::-;1859:39;1945:2;1930:18;;;;1917:32;;-1:-1:-1;;;1701:254:20:o;1960:328::-;2037:6;2045;2053;2106:2;2094:9;2085:7;2081:23;2077:32;2074:52;;;2122:1;2119;2112:12;2074:52;2145:29;2164:9;2145:29;:::i;:::-;2135:39;;2193:38;2227:2;2216:9;2212:18;2193:38;:::i;:::-;2183:48;;2278:2;2267:9;2263:18;2250:32;2240:42;;1960:328;;;;;:::o;2293:180::-;2352:6;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;-1:-1:-1;2444:23:20;;2293:180;-1:-1:-1;2293:180:20:o;2660:254::-;2728:6;2736;2789:2;2777:9;2768:7;2764:23;2760:32;2757:52;;;2805:1;2802;2795:12;2757:52;2841:9;2828:23;2818:33;;2870:38;2904:2;2893:9;2889:18;2870:38;:::i;:::-;2860:48;;2660:254;;;;;:::o;3293:248::-;3361:6;3369;3422:2;3410:9;3401:7;3397:23;3393:32;3390:52;;;3438:1;3435;3428:12;3390:52;-1:-1:-1;;3461:23:20;;;3531:2;3516:18;;;3503:32;;-1:-1:-1;3293:248:20:o;3754:127::-;3815:10;3810:3;3806:20;3803:1;3796:31;3846:4;3843:1;3836:15;3870:4;3867:1;3860:15;3886:1064;3973:6;3981;3989;4042:2;4030:9;4021:7;4017:23;4013:32;4010:52;;;4058:1;4055;4048:12;4010:52;4081:29;4100:9;4081:29;:::i;:::-;4071:39;;4157:2;4146:9;4142:18;4129:32;4119:42;;4212:2;4201:9;4197:18;4184:32;4235:18;4276:2;4268:6;4265:14;4262:34;;;4292:1;4289;4282:12;4262:34;4330:6;4319:9;4315:22;4305:32;;4375:7;4368:4;4364:2;4360:13;4356:27;4346:55;;4397:1;4394;4387:12;4346:55;4433:2;4420:16;4455:2;4451;4448:10;4445:36;;;4461:18;;:::i;:::-;4536:2;4530:9;4504:2;4590:13;;-1:-1:-1;;4586:22:20;;;4610:2;4582:31;4578:40;4566:53;;;4634:18;;;4654:22;;;4631:46;4628:72;;;4680:18;;:::i;:::-;4720:10;4716:2;4709:22;4755:2;4747:6;4740:18;4795:7;4790:2;4785;4781;4777:11;4773:20;4770:33;4767:53;;;4816:1;4813;4806:12;4767:53;4872:2;4867;4863;4859:11;4854:2;4846:6;4842:15;4829:46;4917:1;4912:2;4907;4899:6;4895:15;4891:24;4884:35;4938:6;4928:16;;;;;;;3886:1064;;;;;:::o;4955:260::-;5023:6;5031;5084:2;5072:9;5063:7;5059:23;5055:32;5052:52;;;5100:1;5097;5090:12;5052:52;5123:29;5142:9;5123:29;:::i;:::-;5113:39;;5171:38;5205:2;5194:9;5190:18;5171:38;:::i;5220:127::-;5281:10;5276:3;5272:20;5269:1;5262:31;5312:4;5309:1;5302:15;5336:4;5333:1;5326:15;5352:128;5419:9;;;5440:11;;;5437:37;;;5454:18;;:::i;5485:380::-;5564:1;5560:12;;;;5607;;;5628:61;;5682:4;5674:6;5670:17;5660:27;;5628:61;5735:2;5727:6;5724:14;5704:18;5701:38;5698:161;;5781:10;5776:3;5772:20;5769:1;5762:31;5816:4;5813:1;5806:15;5844:4;5841:1;5834:15;5698:161;;5485:380;;;:::o;5870:403::-;6072:2;6054:21;;;6111:2;6091:18;;;6084:30;6150:34;6145:2;6130:18;;6123:62;-1:-1:-1;;;6216:2:20;6201:18;;6194:37;6263:3;6248:19;;5870:403::o;6636:291::-;6813:6;6802:9;6795:25;6856:2;6851;6840:9;6836:18;6829:30;6776:4;6876:45;6917:2;6906:9;6902:18;6894:6;6876:45;:::i;:::-;6868:53;6636:291;-1:-1:-1;;;;6636:291:20:o;7282:168::-;7355:9;;;7386;;7403:15;;;7397:22;;7383:37;7373:71;;7424:18;;:::i;7455:217::-;7495:1;7521;7511:132;;7565:10;7560:3;7556:20;7553:1;7546:31;7600:4;7597:1;7590:15;7628:4;7625:1;7618:15;7511:132;-1:-1:-1;7657:9:20;;7455:217::o;7677:125::-;7742:9;;;7763:10;;;7760:36;;;7776:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "MINTER_ROLE()": "d5391393",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceAfterDemurrage(address)": "064e55d0",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "decayPerSecond()": "ca9985e5",
    "decimals()": "313ce567",
    "exponentialDecay(uint256,uint256)": "75927791",
    "getDemurrage(address)": "cbcc7612",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "lastActivity(address)": "f07e96b3",
    "mint(address,uint256,string)": "d3fc9864",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setDecayPerSecond(uint256)": "cd38de28",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tax(address)": "7899d80f",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceAfterDemurrage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decayPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"top\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dur\",\"type\":\"uint256\"}],\"name\":\"exponentialDecay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDemurrage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"demurrage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastActivity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_decayPerSecond\",\"type\":\"uint256\"}],\"name\":\"setDecayPerSecond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"tax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"exponentialDecay(uint256,uint256)\":{\"details\":\"Returns the amount remaining after a decay.\",\"params\":{\"dur\":\"The seconds of decay.\",\"top\":\"The amount decaying.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BxlCoinDemurrage.sol\":\"BrusselsCoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/BxlCoinDemurrage.sol\":{\"keccak256\":\"0x0f869c788c37e84c045242d6ebb01dba5cf9d4c59660fc54dcdcd3c35231f49a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f4889024d5f4fb9b4972cc52323443c86799b14a6e317291022270fc3c33473\",\"dweb:/ipfs/QmcaSZRwgWzWLcJ5WACmu2deiBqZCXy1sD534nT9Gk4cUs\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "admins",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceAfterDemurrage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decayPerSecond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "top",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dur",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exponentialDecay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDemurrage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "demurrage",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastActivity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_decayPerSecond",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDecayPerSecond"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "tax"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "exponentialDecay(uint256,uint256)": {
            "details": "Returns the amount remaining after a decay.",
            "params": {
              "dur": "The seconds of decay.",
              "top": "The amount decaying."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/BxlCoinDemurrage.sol": "BrusselsCoin"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/BxlCoinDemurrage.sol": {
        "keccak256": "0x0f869c788c37e84c045242d6ebb01dba5cf9d4c59660fc54dcdcd3c35231f49a",
        "urls": [
          "bzz-raw://4f4889024d5f4fb9b4972cc52323443c86799b14a6e317291022270fc3c33473",
          "dweb:/ipfs/QmcaSZRwgWzWLcJ5WACmu2deiBqZCXy1sD534nT9Gk4cUs"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308",
        "urls": [
          "bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80",
          "dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073",
        "urls": [
          "bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26",
          "dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/BxlCoinDemurrage.sol",
    "id": 399,
    "exportedSymbols": {
      "AccessControl": [
        22247
      ],
      "BrusselsCoin": [
        398
      ],
      "Context": [
        23302
      ],
      "ERC165": [
        23326
      ],
      "ERC20": [
        23130
      ],
      "ERC20Burnable": [
        23254
      ],
      "IAccessControl": [
        22330
      ],
      "IERC20": [
        23208
      ],
      "IERC20Errors": [
        22520
      ],
      "IERC20Metadata": [
        23280
      ],
      "Ownable": [
        22478
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4786:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "58:55:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 399,
        "sourceUnit": 23131,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "114:74:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 399,
        "sourceUnit": 23255,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "189:52:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 399,
        "sourceUnit": 22479,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "242:58:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 399,
        "sourceUnit": 22248,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 398,
        "nodeType": "ContractDefinition",
        "src": "302:4515:0",
        "nodes": [
          {
            "id": 18,
            "nodeType": "VariableDeclaration",
            "src": "378:62:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "d5391393",
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "402:11:0",
            "scope": 398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 14,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 16,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "426:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 15,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "416:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "416:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 23,
            "nodeType": "VariableDeclaration",
            "src": "447:31:0",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "RAY",
            "nameLocation": "464:3:0",
            "scope": 398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "447:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              },
              "id": 22,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 20,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "470:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3237",
                "id": 21,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "476:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_27_by_1",
                  "typeString": "int_const 27"
                },
                "value": "27"
              },
              "src": "470:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30,
            "nodeType": "VariableDeclaration",
            "src": "484:58:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "ca9985e5",
            "mutability": "mutable",
            "name": "decayPerSecond",
            "nameLocation": "499:14:0",
            "scope": 398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "484:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 27,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "id": 25,
                  "name": "RAY",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 23,
                  "src": "516:3:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "hexValue": "3939393939393938",
                  "id": 26,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "522:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_99999998_by_1",
                    "typeString": "int_const 99999998"
                  },
                  "value": "99999998"
                },
                "src": "516:14:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "hexValue": "313030303030303030",
                "id": 28,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "533:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000_by_1",
                  "typeString": "int_const 100000000"
                },
                "value": "100000000"
              },
              "src": "516:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 34,
            "nodeType": "VariableDeclaration",
            "src": "549:47:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "f07e96b3",
            "mutability": "mutable",
            "name": "lastActivity",
            "nameLocation": "584:12:0",
            "scope": 398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 33,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 31,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "557:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "549:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "568:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 42,
            "nodeType": "EventDefinition",
            "src": "603:69:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e7cd4ce7f2a465edc730269a1305e8a48bad821e8fb7e152ec413829c01a53c4",
            "name": "Minted",
            "nameLocation": "609:6:0",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "632:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "616:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "644:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "636:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "659:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "652:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "615:56:0"
            }
          },
          {
            "id": 83,
            "nodeType": "FunctionDefinition",
            "src": "678:258:0",
            "nodes": [],
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "765:171:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 57,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21981,
                        "src": "786:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 58,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "806:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "810:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "806:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22208,
                      "src": "775:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) returns (bool)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "775:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "775:42:0"
                },
                {
                  "body": {
                    "id": 80,
                    "nodeType": "Block",
                    "src": "871:59:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 74,
                              "name": "MINTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "896:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 75,
                                "name": "admins",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "909:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 77,
                              "indexExpression": {
                                "id": 76,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "916:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "909:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 73,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22208,
                            "src": "885:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "885:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 79,
                        "nodeType": "ExpressionStatement",
                        "src": "885:34:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "847:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 67,
                        "name": "admins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "851:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "858:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "851:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "847:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81,
                  "initializationExpression": {
                    "assignments": [
                      63
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "840:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "832:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "832:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 65,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "844:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "832:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "866:3:0",
                      "subExpression": {
                        "id": 70,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "866:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 72,
                    "nodeType": "ExpressionStatement",
                    "src": "866:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "827:103:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 48,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "723:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "727:6:0",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "723:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 50,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 47,
                  "name": "Ownable",
                  "nameLocations": [
                    "715:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22478,
                  "src": "715:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "715:19:0"
              },
              {
                "arguments": [
                  {
                    "hexValue": "4272757373656c7320436f696e",
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "741:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_225239c36337aeb698f9392060e92f1b80253217690b186dfe9b2e15a98ffc44",
                      "typeString": "literal_string \"Brussels Coin\""
                    },
                    "value": "Brussels Coin"
                  },
                  {
                    "hexValue": "42584c",
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "758:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6e2e5ec22240b87bb2a6ad9f1bba81477aa345c870b6062b562c75aa59f93402",
                      "typeString": "literal_string \"BXL\""
                    },
                    "value": "BXL"
                  }
                ],
                "id": 54,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51,
                  "name": "ERC20",
                  "nameLocations": [
                    "735:5:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23130,
                  "src": "735:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "735:29:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "admins",
                  "nameLocation": "707:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "690:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "690:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 44,
                    "nodeType": "ArrayTypeName",
                    "src": "690:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:25:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "765:0:0"
            },
            "scope": 398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92,
            "nodeType": "FunctionDefinition",
            "src": "942:90:0",
            "nodes": [],
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1007:25:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "36",
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1024:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  },
                  "functionReturnParameters": 88,
                  "id": 90,
                  "nodeType": "Return",
                  "src": "1017:8:0"
                }
              ]
            },
            "baseFunctions": [
              22694
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "951:8:0",
            "overrides": {
              "id": 85,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "982:8:0"
            },
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "959:2:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1000:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "999:7:0"
            },
            "scope": 398,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 129,
            "nodeType": "FunctionDefinition",
            "src": "1038:348:0",
            "nodes": [],
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1144:242:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 103,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1183:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 104,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1196:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1200:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1196:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 102,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22032,
                          "src": "1175:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1175:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1221:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_925c51923fee26899379d7c6f7718a679a4604d72a53c293f9250eb4f38030dc",
                          "typeString": "literal_string \"Must have minter role to mint\""
                        },
                        "value": "Must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_925c51923fee26899379d7c6f7718a679a4604d72a53c293f9250eb4f38030dc",
                          "typeString": "literal_string \"Must have minter role to mint\""
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1154:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1154:108:0"
                },
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 110,
                        "name": "lastActivity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1272:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "id": 111,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "1285:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1272:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 113,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1291:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1297:9:0",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1291:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1272:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "1322:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 119,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1326:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 117,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22970,
                      "src": "1316:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:17:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 123,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "1355:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 124,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1359:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 125,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1367:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 122,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1348:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1348:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "EmitStatement",
                  "src": "1343:36:0"
                }
              ]
            },
            "functionSelector": "d3fc9864",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1047:4:0",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1069:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1061:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1089:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1081:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "1119:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1105:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1051:85:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1144:0:0"
            },
            "scope": 398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 157,
            "nodeType": "FunctionDefinition",
            "src": "1392:251:0",
            "nodes": [],
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1471:172:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 137,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "1489:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1481:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 136,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1481:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 141,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 139,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "1516:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 138,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22716,
                      "src": "1506:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1506:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1481:43:0"
                },
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 142,
                      "name": "demurrage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "1534:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 143,
                        "name": "accountBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1546:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 145,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "1580:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 146,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1596:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1602:9:0",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1596:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 148,
                                "name": "lastActivity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "1614:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 150,
                              "indexExpression": {
                                "id": 149,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 131,
                                "src": "1627:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1614:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1596:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 144,
                          "name": "exponentialDecay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "1563:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) view returns (uint256)"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1563:73:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1546:90:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1534:102:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:102:0"
                }
              ]
            },
            "functionSelector": "cbcc7612",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDemurrage",
            "nameLocation": "1401:12:0",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1422:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1414:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1413:17:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "demurrage",
                  "nameLocation": "1460:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1452:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1451:19:0"
            },
            "scope": 398,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 178,
            "nodeType": "FunctionDefinition",
            "src": "1649:155:0",
            "nodes": [],
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "1698:106:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "mutability": "mutable",
                      "name": "demurrage",
                      "nameLocation": "1716:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 177,
                      "src": "1708:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1708:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 167,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "1741:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 166,
                      "name": "getDemurrage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "1728:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1728:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1708:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 171,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "1769:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 172,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22398,
                          "src": "1778:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1778:7:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 174,
                        "name": "demurrage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1787:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 170,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22860,
                      "src": "1759:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1759:38:0"
                }
              ]
            },
            "functionSelector": "7899d80f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 162,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 161,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1688:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22389,
                  "src": "1688:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1688:9:0"
              }
            ],
            "name": "tax",
            "nameLocation": "1658:3:0",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1670:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1662:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1662:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1661:17:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:0:0"
            },
            "scope": 398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 204,
            "nodeType": "FunctionDefinition",
            "src": "1810:240:0",
            "nodes": [],
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "1896:154:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "1914:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1906:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1906:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 188,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "1941:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 187,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22716,
                      "src": "1931:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1931:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1906:43:0"
                },
                {
                  "expression": {
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 191,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "1959:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 193,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "1986:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 194,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2002:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2008:9:0",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2002:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 196,
                              "name": "lastActivity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2020:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 198,
                            "indexExpression": {
                              "id": 197,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 180,
                              "src": "2033:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2020:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2002:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 192,
                        "name": "exponentialDecay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "1969:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1969:73:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1959:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:83:0"
                }
              ]
            },
            "functionSelector": "064e55d0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceAfterDemurrage",
            "nameLocation": "1819:21:0",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1849:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1841:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1841:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1840:17:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1887:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1879:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1879:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1878:17:0"
            },
            "scope": 398,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 257,
            "nodeType": "FunctionDefinition",
            "src": "2056:402:0",
            "nodes": [],
            "body": {
              "id": 256,
              "nodeType": "Block",
              "src": "2132:326:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "2150:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 256,
                      "src": "2142:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 214,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2142:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 216,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23292,
                      "src": "2157:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2142:27:0"
                },
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "mutability": "mutable",
                      "name": "demurrage",
                      "nameLocation": "2187:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 256,
                      "src": "2179:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2179:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 224,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 222,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "2212:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 221,
                      "name": "getDemurrage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "2199:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2179:38:0"
                },
                {
                  "expression": {
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 225,
                        "name": "lastActivity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "2227:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 227,
                      "indexExpression": {
                        "id": 226,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "2240:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2227:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 228,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2248:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2254:9:0",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2248:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2227:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "2227:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 233,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "2283:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 234,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22398,
                          "src": "2289:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2289:7:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 236,
                        "name": "demurrage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "2298:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 232,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22860,
                      "src": "2273:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2273:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 241,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "2336:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 240,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22716,
                            "src": "2326:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2326:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 243,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "2345:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2326:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682062616c616e63652c20636865636b20666f722064656d757272616765",
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2352:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4e38fc86a4401deb6fdb1cbe6e87c3b4d71b51db89a97bcda1ff52cd889eeb5",
                          "typeString": "literal_string \"Not enough balance, check for demurrage\""
                        },
                        "value": "Not enough balance, check for demurrage"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4e38fc86a4401deb6fdb1cbe6e87c3b4d71b51db89a97bcda1ff52cd889eeb5",
                          "typeString": "literal_string \"Not enough balance, check for demurrage\""
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2318:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2318:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "2318:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 249,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "2414:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 250,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "2420:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 251,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "2424:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 248,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22860,
                      "src": "2404:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2404:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:26:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2447:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 213,
                  "id": 255,
                  "nodeType": "Return",
                  "src": "2440:11:0"
                }
              ]
            },
            "baseFunctions": [
              22740
            ],
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2065:8:0",
            "overrides": {
              "id": 210,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2108:8:0"
            },
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2082:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "2074:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2094:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "2086:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2073:27:0"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "2126:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2125:6:0"
            },
            "scope": 398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 318,
            "nodeType": "FunctionDefinition",
            "src": "2464:473:0",
            "nodes": [],
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "2558:379:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 270,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "2576:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "2568:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 269,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2568:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 273,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 271,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23292,
                      "src": "2586:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2586:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2568:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 275,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "2624:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 276,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "2630:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 277,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "2639:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 274,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23129,
                      "src": "2608:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "2608:37:0"
                },
                {
                  "assignments": [
                    281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 281,
                      "mutability": "mutable",
                      "name": "demurrage",
                      "nameLocation": "2663:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "2655:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 280,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2655:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 285,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 283,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "2688:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 282,
                      "name": "getDemurrage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "2675:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2675:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2655:38:0"
                },
                {
                  "expression": {
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 286,
                        "name": "lastActivity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "2703:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 288,
                      "indexExpression": {
                        "id": 287,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "2716:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2703:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 289,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2724:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2730:9:0",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2724:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2703:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "2703:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 294,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "2759:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 295,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22398,
                          "src": "2765:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2765:7:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 297,
                        "name": "demurrage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "2774:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 293,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22860,
                      "src": "2749:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2749:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "2749:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 302,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "2812:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 301,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22716,
                            "src": "2802:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2802:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 304,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "2824:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2802:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682062616c616e63652c20636865636b20666f722064656d757272616765",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2831:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4e38fc86a4401deb6fdb1cbe6e87c3b4d71b51db89a97bcda1ff52cd889eeb5",
                          "typeString": "literal_string \"Not enough balance, check for demurrage\""
                        },
                        "value": "Not enough balance, check for demurrage"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4e38fc86a4401deb6fdb1cbe6e87c3b4d71b51db89a97bcda1ff52cd889eeb5",
                          "typeString": "literal_string \"Not enough balance, check for demurrage\""
                        }
                      ],
                      "id": 300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2794:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2794:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "2794:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 310,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "2893:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 311,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "2899:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 312,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "2903:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 309,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22860,
                      "src": "2883:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2883:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "2883:26:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2926:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 268,
                  "id": 316,
                  "nodeType": "Return",
                  "src": "2919:11:0"
                }
              ]
            },
            "baseFunctions": [
              22813
            ],
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2473:12:0",
            "overrides": {
              "id": 265,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2534:8:0"
            },
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2494:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2486:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2508:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2500:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2520:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2512:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2512:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2485:41:0"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2552:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2551:6:0"
            },
            "scope": 398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 330,
            "nodeType": "FunctionDefinition",
            "src": "2943:121:0",
            "nodes": [],
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "3014:50:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 325,
                      "name": "decayPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "3024:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 326,
                      "name": "_decayPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "3041:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3024:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "3024:32:0"
                }
              ]
            },
            "functionSelector": "cd38de28",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 323,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 322,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3004:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22389,
                  "src": "3004:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3004:9:0"
              }
            ],
            "name": "setDecayPerSecond",
            "nameLocation": "2952:17:0",
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "_decayPerSecond",
                  "nameLocation": "2978:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "2970:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2970:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2969:25:0"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3014:0:0"
            },
            "scope": 398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 350,
            "nodeType": "FunctionDefinition",
            "src": "3361:147:0",
            "nodes": [],
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "3443:65:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 341,
                        "name": "top",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 333,
                        "src": "3465:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 343,
                            "name": "decayPerSecond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "3475:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 344,
                            "name": "dur",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "3491:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 345,
                            "name": "RAY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "3496:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 342,
                          "name": "rpow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "3470:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3470:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 340,
                      "name": "rmul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "3460:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3460:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 339,
                  "id": 348,
                  "nodeType": "Return",
                  "src": "3453:48:0"
                }
              ]
            },
            "documentation": {
              "id": 331,
              "nodeType": "StructuredDocumentation",
              "src": "3223:133:0",
              "text": "@dev Returns the amount remaining after a decay.\n @param top The amount decaying.\n @param dur The seconds of decay."
            },
            "functionSelector": "75927791",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exponentialDecay",
            "nameLocation": "3370:16:0",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "top",
                  "nameLocation": "3395:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "3387:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3387:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "dur",
                  "nameLocation": "3408:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "3400:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3386:26:0"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "3434:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3434:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3433:9:0"
            },
            "scope": 398,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 384,
            "nodeType": "FunctionDefinition",
            "src": "3515:156:0",
            "nodes": [],
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "3585:86:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 359,
                      "name": "z",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "3595:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 360,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "3599:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 361,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "3603:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3599:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3595:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "3595:9:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 366,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 354,
                            "src": "3622:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3627:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3622:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 369,
                              "name": "z",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "3632:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 370,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 354,
                              "src": "3636:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3632:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 372,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "3641:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3632:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3622:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3614:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3614:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "3614:29:0"
                },
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 377,
                      "name": "z",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "3653:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 378,
                        "name": "z",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "3657:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 379,
                        "name": "RAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "3661:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3657:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3653:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "3653:11:0"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rmul",
            "nameLocation": "3524:4:0",
            "parameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "3537:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "3529:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3529:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 354,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "3548:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "3540:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3528:22:0"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "z",
                  "nameLocation": "3582:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "3574:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3574:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3573:11:0"
            },
            "scope": 398,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 397,
            "nodeType": "FunctionDefinition",
            "src": "3681:1134:0",
            "nodes": [],
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "3762:1053:0",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3781:1028:0",
                    "statements": [
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3811:10:0",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3813:6:0",
                                  "value": {
                                    "name": "b",
                                    "nodeType": "YulIdentifier",
                                    "src": "3818:1:0"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "z",
                                      "nodeType": "YulIdentifier",
                                      "src": "3813:1:0"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "3804:17:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3809:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3842:957:0",
                              "statements": [
                                {
                                  "cases": [
                                    {
                                      "body": {
                                        "nodeType": "YulBlock",
                                        "src": "3876:10:0",
                                        "statements": [
                                          {
                                            "nodeType": "YulAssignment",
                                            "src": "3878:6:0",
                                            "value": {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3883:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "z",
                                                "nodeType": "YulIdentifier",
                                                "src": "3878:1:0"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "nodeType": "YulCase",
                                      "src": "3869:17:0",
                                      "value": {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3874:1:0",
                                        "type": "",
                                        "value": "0"
                                      }
                                    },
                                    {
                                      "body": {
                                        "nodeType": "YulBlock",
                                        "src": "3911:874:0",
                                        "statements": [
                                          {
                                            "cases": [
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "3957:10:0",
                                                  "statements": [
                                                    {
                                                      "nodeType": "YulAssignment",
                                                      "src": "3959:6:0",
                                                      "value": {
                                                        "name": "b",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3964:1:0"
                                                      },
                                                      "variableNames": [
                                                        {
                                                          "name": "z",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3959:1:0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "nodeType": "YulCase",
                                                "src": "3950:17:0",
                                                "value": {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3955:1:0",
                                                  "type": "",
                                                  "value": "0"
                                                }
                                              },
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "3976:10:0",
                                                  "statements": [
                                                    {
                                                      "nodeType": "YulAssignment",
                                                      "src": "3978:6:0",
                                                      "value": {
                                                        "name": "x",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3983:1:0"
                                                      },
                                                      "variableNames": [
                                                        {
                                                          "name": "z",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3978:1:0"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "nodeType": "YulCase",
                                                "src": "3968:18:0",
                                                "value": "default"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "name": "n",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3944:1:0"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3947:1:0",
                                                  "type": "",
                                                  "value": "2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mod",
                                                "nodeType": "YulIdentifier",
                                                "src": "3940:3:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3940:9:0"
                                            },
                                            "nodeType": "YulSwitch",
                                            "src": "3933:53:0"
                                          },
                                          {
                                            "nodeType": "YulVariableDeclaration",
                                            "src": "4007:21:0",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "name": "b",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4023:1:0"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "4026:1:0",
                                                  "type": "",
                                                  "value": "2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "div",
                                                "nodeType": "YulIdentifier",
                                                "src": "4019:3:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4019:9:0"
                                            },
                                            "variables": [
                                              {
                                                "name": "half",
                                                "nodeType": "YulTypedName",
                                                "src": "4011:4:0",
                                                "type": ""
                                              }
                                            ]
                                          },
                                          {
                                            "body": {
                                              "nodeType": "YulBlock",
                                              "src": "4110:657:0",
                                              "statements": [
                                                {
                                                  "nodeType": "YulVariableDeclaration",
                                                  "src": "4136:19:0",
                                                  "value": {
                                                    "arguments": [
                                                      {
                                                        "name": "x",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4150:1:0"
                                                      },
                                                      {
                                                        "name": "x",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4153:1:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mul",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4146:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4146:9:0"
                                                  },
                                                  "variables": [
                                                    {
                                                      "name": "xx",
                                                      "nodeType": "YulTypedName",
                                                      "src": "4140:2:0",
                                                      "type": ""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "body": {
                                                    "nodeType": "YulBlock",
                                                    "src": "4195:15:0",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "arguments": [
                                                            {
                                                              "kind": "number",
                                                              "nodeType": "YulLiteral",
                                                              "src": "4204:1:0",
                                                              "type": "",
                                                              "value": "0"
                                                            },
                                                            {
                                                              "kind": "number",
                                                              "nodeType": "YulLiteral",
                                                              "src": "4206:1:0",
                                                              "type": "",
                                                              "value": "0"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "revert",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4197:6:0"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "4197:11:0"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4197:11:0"
                                                      }
                                                    ]
                                                  },
                                                  "condition": {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "4187:3:0",
                                                        "type": "",
                                                        "value": "128"
                                                      },
                                                      {
                                                        "name": "x",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4192:1:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "shr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4183:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4183:11:0"
                                                  },
                                                  "nodeType": "YulIf",
                                                  "src": "4180:30:0"
                                                },
                                                {
                                                  "nodeType": "YulVariableDeclaration",
                                                  "src": "4235:28:0",
                                                  "value": {
                                                    "arguments": [
                                                      {
                                                        "name": "xx",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4254:2:0"
                                                      },
                                                      {
                                                        "name": "half",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4258:4:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4250:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4250:13:0"
                                                  },
                                                  "variables": [
                                                    {
                                                      "name": "xxRound",
                                                      "nodeType": "YulTypedName",
                                                      "src": "4239:7:0",
                                                      "type": ""
                                                    }
                                                  ]
                                                },
                                                {
                                                  "body": {
                                                    "nodeType": "YulBlock",
                                                    "src": "4307:15:0",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "arguments": [
                                                            {
                                                              "kind": "number",
                                                              "nodeType": "YulLiteral",
                                                              "src": "4316:1:0",
                                                              "type": "",
                                                              "value": "0"
                                                            },
                                                            {
                                                              "kind": "number",
                                                              "nodeType": "YulLiteral",
                                                              "src": "4318:1:0",
                                                              "type": "",
                                                              "value": "0"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "revert",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4309:6:0"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "4309:11:0"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4309:11:0"
                                                      }
                                                    ]
                                                  },
                                                  "condition": {
                                                    "arguments": [
                                                      {
                                                        "name": "xxRound",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4294:7:0"
                                                      },
                                                      {
                                                        "name": "xx",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4303:2:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "lt",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4291:2:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4291:15:0"
                                                  },
                                                  "nodeType": "YulIf",
                                                  "src": "4288:34:0"
                                                },
                                                {
                                                  "nodeType": "YulAssignment",
                                                  "src": "4347:20:0",
                                                  "value": {
                                                    "arguments": [
                                                      {
                                                        "name": "xxRound",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4356:7:0"
                                                      },
                                                      {
                                                        "name": "b",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4365:1:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "div",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4352:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4352:15:0"
                                                  },
                                                  "variableNames": [
                                                    {
                                                      "name": "x",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4347:1:0"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "body": {
                                                    "nodeType": "YulBlock",
                                                    "src": "4404:341:0",
                                                    "statements": [
                                                      {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "4434:19:0",
                                                        "value": {
                                                          "arguments": [
                                                            {
                                                              "name": "z",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "4448:1:0"
                                                            },
                                                            {
                                                              "name": "x",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "4451:1:0"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "mul",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4444:3:0"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "4444:9:0"
                                                        },
                                                        "variables": [
                                                          {
                                                            "name": "zx",
                                                            "nodeType": "YulTypedName",
                                                            "src": "4438:2:0",
                                                            "type": ""
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "body": {
                                                          "nodeType": "YulBlock",
                                                          "src": "4535:15:0",
                                                          "statements": [
                                                            {
                                                              "expression": {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4544:1:0",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4546:1:0",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "revert",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4537:6:0"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "4537:11:0"
                                                              },
                                                              "nodeType": "YulExpressionStatement",
                                                              "src": "4537:11:0"
                                                            }
                                                          ]
                                                        },
                                                        "condition": {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "x",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "4503:1:0"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "iszero",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4496:6:0"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "4496:9:0"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4489:6:0"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "4489:17:0"
                                                            },
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "arguments": [
                                                                        {
                                                                          "name": "zx",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "4522:2:0"
                                                                        },
                                                                        {
                                                                          "name": "x",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "4526:1:0"
                                                                        }
                                                                      ],
                                                                      "functionName": {
                                                                        "name": "div",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4518:3:0"
                                                                      },
                                                                      "nodeType": "YulFunctionCall",
                                                                      "src": "4518:10:0"
                                                                    },
                                                                    {
                                                                      "name": "z",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "4530:1:0"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "eq",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4515:2:0"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "4515:17:0"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4508:6:0"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "4508:25:0"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "and",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4485:3:0"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "4485:49:0"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "4482:68:0"
                                                      },
                                                      {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "4579:28:0",
                                                        "value": {
                                                          "arguments": [
                                                            {
                                                              "name": "zx",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "4598:2:0"
                                                            },
                                                            {
                                                              "name": "half",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "4602:4:0"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "add",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4594:3:0"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "4594:13:0"
                                                        },
                                                        "variables": [
                                                          {
                                                            "name": "zxRound",
                                                            "nodeType": "YulTypedName",
                                                            "src": "4583:7:0",
                                                            "type": ""
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "body": {
                                                          "nodeType": "YulBlock",
                                                          "src": "4655:15:0",
                                                          "statements": [
                                                            {
                                                              "expression": {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4664:1:0",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4666:1:0",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "revert",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4657:6:0"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "4657:11:0"
                                                              },
                                                              "nodeType": "YulExpressionStatement",
                                                              "src": "4657:11:0"
                                                            }
                                                          ]
                                                        },
                                                        "condition": {
                                                          "arguments": [
                                                            {
                                                              "name": "zxRound",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "4642:7:0"
                                                            },
                                                            {
                                                              "name": "zx",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "4651:2:0"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "lt",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4639:2:0"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "4639:15:0"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "4636:34:0"
                                                      },
                                                      {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4699:20:0",
                                                        "value": {
                                                          "arguments": [
                                                            {
                                                              "name": "zxRound",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "4708:7:0"
                                                            },
                                                            {
                                                              "name": "b",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "4717:1:0"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "div",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4704:3:0"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "4704:15:0"
                                                        },
                                                        "variableNames": [
                                                          {
                                                            "name": "z",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4699:1:0"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "condition": {
                                                    "arguments": [
                                                      {
                                                        "name": "n",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4399:1:0"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "4401:1:0",
                                                        "type": "",
                                                        "value": "2"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mod",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4395:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4395:8:0"
                                                  },
                                                  "nodeType": "YulIf",
                                                  "src": "4392:353:0"
                                                }
                                              ]
                                            },
                                            "condition": {
                                              "name": "n",
                                              "nodeType": "YulIdentifier",
                                              "src": "4090:1:0"
                                            },
                                            "nodeType": "YulForLoop",
                                            "post": {
                                              "nodeType": "YulBlock",
                                              "src": "4092:17:0",
                                              "statements": [
                                                {
                                                  "nodeType": "YulAssignment",
                                                  "src": "4094:13:0",
                                                  "value": {
                                                    "arguments": [
                                                      {
                                                        "name": "n",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4103:1:0"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "4105:1:0",
                                                        "type": "",
                                                        "value": "2"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "div",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4099:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4099:8:0"
                                                  },
                                                  "variableNames": [
                                                    {
                                                      "name": "n",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4094:1:0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "pre": {
                                              "nodeType": "YulBlock",
                                              "src": "4071:18:0",
                                              "statements": [
                                                {
                                                  "nodeType": "YulAssignment",
                                                  "src": "4073:14:0",
                                                  "value": {
                                                    "arguments": [
                                                      {
                                                        "name": "n",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4082:1:0"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "4085:1:0",
                                                        "type": "",
                                                        "value": "2"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "div",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4078:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4078:9:0"
                                                  },
                                                  "variableNames": [
                                                    {
                                                      "name": "n",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4073:1:0"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "src": "4067:700:0"
                                          }
                                        ]
                                      },
                                      "nodeType": "YulCase",
                                      "src": "3903:882:0",
                                      "value": "default"
                                    }
                                  ],
                                  "expression": {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3867:1:0"
                                  },
                                  "nodeType": "YulSwitch",
                                  "src": "3860:925:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "3834:965:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "n",
                          "nodeType": "YulIdentifier",
                          "src": "3802:1:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "3795:1004:0"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 390,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3818:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 390,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3964:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 390,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4023:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 390,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4365:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 390,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4717:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 388,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3802:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 388,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3944:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 388,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4073:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 388,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4082:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 388,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4090:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 388,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4094:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 388,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4103:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 388,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4399:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3867:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3983:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4150:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4153:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4192:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4347:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4451:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4503:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4526:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 393,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3813:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 393,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3878:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 393,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3959:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 393,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3978:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 393,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4448:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 393,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4530:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 393,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4699:1:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 395,
                  "nodeType": "InlineAssembly",
                  "src": "3772:1037:0"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rpow",
            "nameLocation": "3690:4:0",
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "3703:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "3695:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3695:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "n",
                  "nameLocation": "3714:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "3706:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3706:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "3725:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "3717:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3717:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3694:33:0"
            },
            "returnParameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "z",
                  "nameLocation": "3759:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "3751:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3750:11:0"
            },
            "scope": 398,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "ERC20",
              "nameLocations": [
                "327:5:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23130,
              "src": "327:5:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "327:5:0"
          },
          {
            "baseName": {
              "id": 8,
              "name": "ERC20Burnable",
              "nameLocations": [
                "334:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23254,
              "src": "334:13:0"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "334:13:0"
          },
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nameLocations": [
                "349:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22478,
              "src": "349:7:0"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "349:7:0"
          },
          {
            "baseName": {
              "id": 12,
              "name": "AccessControl",
              "nameLocations": [
                "358:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22247,
              "src": "358:13:0"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "358:13:0"
          }
        ],
        "canonicalName": "BrusselsCoin",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          398,
          22247,
          23326,
          23338,
          22330,
          22478,
          23254,
          23130,
          22520,
          23280,
          23208,
          23302
        ],
        "name": "BrusselsCoin",
        "nameLocation": "311:12:0",
        "scope": 399,
        "usedErrors": [
          22257,
          22260,
          22344,
          22349,
          22490,
          22495,
          22500,
          22509,
          22514,
          22519
        ],
        "usedEvents": [
          42,
          22269,
          22278,
          22287,
          22355,
          23142,
          23151
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 0
}